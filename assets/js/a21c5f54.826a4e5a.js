"use strict";(self.webpackChunktech_note=self.webpackChunktech_note||[]).push([[7675],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,g=m["".concat(l,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(g,s(s({ref:t},i),{},{components:n})):r.createElement(g,s({ref:t},i))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,s[1]=p;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4182:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],p={},l=void 0,c={unversionedId:"Rxjs/general",id:"Rxjs/general",title:"general",description:"take",source:"@site/docs/Rxjs/general.md",sourceDirName:"Rxjs",slug:"/Rxjs/general",permalink:"/tech-note/docs/Rxjs/general",draft:!1,editUrl:"https://github.com/thomas-chu-30/tech-note/tree/master/docs/Rxjs/general.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Customized Pipe",permalink:"/tech-note/docs/Rxjs/customized_pipe"},next:{title:"enum",permalink:"/tech-note/docs/Type Script/enum"}},i={},u=[{value:"take",id:"take",level:2},{value:"megeMap",id:"megemap",level:2}],m={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"take"},"take"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://rxjs-cn.github.io/learn-rxjs-operators/operators/filtering/take.html"},"https://rxjs-cn.github.io/learn-rxjs-operators/operators/filtering/take.html")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n// \u767c\u51fa 1,2,3,4,5\nconst source = of(1, 2, 3, 4, 5);\n// \u53d6\u7b2c\u4e00\u500b\u767c\u51fa\u7684\u503c\u7136\u5f8c\u5b8c\u6210\nconst example = source.pipe(take(1));\n// \u8f38\u51fa: 1\nconst subscribe = example.subscribe(val => console.log(val));\n")),(0,a.kt)("h2",{id:"megemap"},"megeMap"),(0,a.kt)("p",null,"mergeMap = map + mergeAll\uff0c\u9996\u5148\u5229\u7528 map emit \u51fa\u53e6\u4e00\u500bobserable\uff0c \u518d\u5229\u7528 mergeAll \u5c07 emit \u51fa\u4f86\u7684\u591a\u689d Observable \u5408\u4f75\u6210\u4e00\u689d Observable\uff0c\u7bc4\u4f8b\u53ca Marble Diagram \u5982\u4e0b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const series1$ = interval(200);\nconst series2$ = interval(1000);\n\nseries1$.pipe(\n  take(3),\n  map((s)=>series2$.pipe(take(3))),\n  mergeAll()\n).subscribe(x=>console.log(x));\n// 0,0,0, 1,1,1, 2,2,2\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u7684\u7bc4\u4f8b\u53ef\u4ee5\u6539\u7528 megeMap \u904b\u7b97\u5b50\uff0c\u6548\u679c\u6703\u662f\u4e00\u6a23\u7684 !!!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const series1$ = interval(200);\nconst series2$ = interval(1000);\n    \nseries1$.pipe(\n  take(3),\n  mergeMap((s)=>series2$.pipe(take(3))),\n).subscribe(x=>console.log(x));\n")),(0,a.kt)("p",null,"\u70ba\u4e86\u89e3\u6c7a\u5de2\u72c0\u8a02\u95b1\u554f\u984c"),(0,a.kt)("p",null,"\u5728\u5beb\u7db2\u9801\u7684\u6642\u5019\uff0c\u6642\u5e38\u9700\u8981\u547c\u53eb\u591a\u652fAPI\uff0c\u4e26\u53d6\u5f97\u7d50\u679c\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u80fd\u5beb\u6210\u5982\u4e0b\u9019\u6a23\uff0c\u5148 call Post API\uff0c\u53d6\u5f97 post id \u5f8c\uff0c\u518d call Comment API\uff0c\u53d6\u5f97\u5c0d\u61c9 Post \u7684\u6240\u6709 Comments\uff0c\u7bc4\u4f8b\u5982\u4e0b\uff0c\u5982\u6b64\u5373\u884c\u6210\u4e86\u5de2\u72c0\u8a02\u95b1\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\nlet postApiUrl = 'https://jsonplaceholder.typicode.com/posts/1';\nlet commentApiUrl = 'https://jsonplaceholder.typicode.com/comments';\n\n// \u5de2\u72c0 Obersable\nthis.http.get(postApiUrl).subscribe((p: any)=>{\n  this.http.get(`${commentApiUrl}/${p.id}`).subscribe(c => {\n    console.log(c);\n  })\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"let postApiUrl = 'https://jsonplaceholder.typicode.com/posts/1';\nlet commentApiUrl = 'https://jsonplaceholder.typicode.com/comments';\n\nthis.http.get(postApiUrl).pipe(\n   mergeMap((p: any) => this.http.get(`${commentApiUrl}/${p.id}`))\n).subscribe(x=>console.log(x));\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://medium.com/allen%E7%9A%84%E6%8A%80%E8%A1%93%E7%AD%86%E8%A8%98/rxjs-mergemap-%E7%AD%86%E8%A8%98-b971778cbff4"},"\u53c3\u8003\u6587\u7ae0")))}f.isMDXComponent=!0}}]);